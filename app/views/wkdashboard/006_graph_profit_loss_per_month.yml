 Profit and loss per month:
  chart_type: Line
  code_str: "if @to.month < getFinancialStart.to_i; financial_period_start = ('01/'+getFinancialStart.to_s+'/'+(@to.year - 1).to_s).to_datetime - 1.second; financial_period_end = ('01/'+getFinancialStart.to_s+'/'+(@to.year).to_s).to_date - 1.second; else; financial_period_start = ('01/'+getFinancialStart.to_s+'/'+@to.year.to_s).to_datetime - 1.second; financial_period_end = ('01/'+getFinancialStart.to_s+'/'+(@to.year + 1).to_s).to_date - 1.second; end;incomeDetail = WkGlTransactionDetail.joins('LEFT OUTER JOIN wk_ledgers on wk_ledgers.id = wk_gl_transaction_details.ledger_id').joins('LEFT OUTER JOIN wk_gl_transactions on wk_gl_transactions.id = wk_gl_transaction_details.gl_transaction_id' ).where('wk_ledgers.ledger_type IN (?) and wk_gl_transactions.trans_date between ? and ?', incomeLedgerTypes, getToDateTime(financial_period_start), getToDateTime(financial_period_end)).select('SUM(wk_gl_transaction_details.amount) AS sum_amount, wk_ledgers.id as ledger_id, wk_ledgers.ledger_type, wk_gl_transaction_details.detail_type, extract(year from wk_gl_transactions.trans_date) AS trans_year, extract(month from wk_gl_transactions.trans_date) AS trans_month ').group('wk_ledgers.id, wk_ledgers.ledger_type, wk_gl_transaction_details.detail_type, extract(year from wk_gl_transactions.trans_date), extract(month from wk_gl_transactions.trans_date)').order('trans_year, trans_month'); incomeHash = Hash.new; incomeDetail.each do |ic|; transDt = ic.trans_month.to_i; if incomeHash[transDt].blank?; incomeHash[transDt] = {ic.ledger_type => {ic.detail_type => ic.sum_amount}}; else; if incomeHash[transDt][ic.ledger_type].blank?; incomeHash[transDt][ic.ledger_type] = {ic.detail_type => ic.sum_amount}; else; if incomeHash[transDt][ic.ledger_type][ic.detail_type].blank?; incomeHash[transDt][ic.ledger_type][ic.detail_type] = ic.sum_amount; else; incomeHash[transDt][ic.ledger_type][ic.detail_type] += ic.sum_amount; end; end; end; end; profitIncomeHash = Hash.new; incomeHash.each do |yearMon, ledTypeHash|; ledTypeHash.each do |ledgerType, trxAmountHash|; profitValHash = calculateBalance({ledgerType=> trxAmountHash['c'].to_f}, {ledgerType=> trxAmountHash['d'].to_f}, ledgerType); unless profitIncomeHash[yearMon].blank?; profitIncomeHash[yearMon] += profitValHash[ledgerType].to_f; else; profitIncomeHash[yearMon] = profitValHash[ledgerType].to_f; end; end; end; fields = []; 12.times {|m| fields << month_name(((financial_period_end.month - 1 - m) % 12) + 1).first(3)}; @profit_income_arr = [0]*12; profitIncomeHash.each {|month, sum| @profit_income_arr[financial_period_end.month - month.to_i] = sum }; @profit_income_arr.reverse!; @profit_income_arr.each_with_index {|amt, index| @profit_income_arr[index] = amt + @profit_income_arr[index -1 ] if index != 0};@profit_income_arr.reverse!; expenseDetail = WkGlTransactionDetail.joins('LEFT OUTER JOIN wk_ledgers on wk_ledgers.id = wk_gl_transaction_details.ledger_id').joins('LEFT OUTER JOIN wk_gl_transactions on wk_gl_transactions.id = wk_gl_transaction_details.gl_transaction_id' ).where('wk_ledgers.ledger_type IN (?) and wk_gl_transactions.trans_date between ? and ?', expenseLedgerTypes, getToDateTime(financial_period_start), getToDateTime(financial_period_end)).select('SUM(wk_gl_transaction_details.amount) AS sum_amount, wk_ledgers.id as ledger_id, wk_ledgers.ledger_type, wk_gl_transaction_details.detail_type, extract(year from wk_gl_transactions.trans_date) AS trans_year, extract(month from wk_gl_transactions.trans_date) AS trans_month ').group('wk_ledgers.id, wk_ledgers.ledger_type, wk_gl_transaction_details.detail_type, extract(year from wk_gl_transactions.trans_date), extract(month from wk_gl_transactions.trans_date)').order('trans_year, trans_month'); expenseHash = Hash.new; expenseDetail.each do |ic|; transDt = ic.trans_month.to_i; if expenseHash[transDt].blank?; expenseHash[transDt] = {ic.ledger_type => {ic.detail_type => ic.sum_amount}}; else; if expenseHash[transDt][ic.ledger_type].blank?; expenseHash[transDt][ic.ledger_type] = {ic.detail_type => ic.sum_amount}; else; if expenseHash[transDt][ic.ledger_type][ic.detail_type].blank?; expenseHash[transDt][ic.ledger_type][ic.detail_type] = ic.sum_amount; else; expenseHash[transDt][ic.ledger_type][ic.detail_type] += ic.sum_amount; end; end; end; end; profitExpenseHash = Hash.new; expenseHash.each do |yearMon, ledTypeHash|; ledTypeHash.each do |ledgerType, trxAmountHash|; profitValHash = calculateBalance({ledgerType=> trxAmountHash['c'].to_f}, {ledgerType=> trxAmountHash['d'].to_f}, ledgerType); unless profitExpenseHash[yearMon].blank?; profitExpenseHash[yearMon] += profitValHash[ledgerType].to_f; else; profitExpenseHash[yearMon] = profitValHash[ledgerType].to_f; end; end; end; fields = []; 12.times {|m| fields << month_name(((financial_period_end.month - 1 - m) % 12) + 1).first(3)} ; @profit_expense_arr = [0]*12; profitExpenseHash.each {|month, sum| @profit_expense_arr[financial_period_end.month - month.to_i] = sum };@profit_expense_arr.reverse!; @profit_expense_arr.each_with_index {|amt, index| @profit_expense_arr[index] = amt + @profit_expense_arr[index -1 ] if index != 0}; @profit_expense_arr.reverse!; { 'fields' => fields.reverse };"
  x_title: "label_months"
  y_title: "label_amount"
  names_of_data:
   - data: "@profit_income_arr.reverse"
     title: "label_total_income"
   - data: "@profit_expense_arr.reverse"
     title: "label_total_expense" 